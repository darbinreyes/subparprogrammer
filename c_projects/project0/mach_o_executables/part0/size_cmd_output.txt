Output of xcrun size -x -l -m a.out
#######
Segment __PAGEZERO: 0x100000000 (vmaddr 0x0 fileoff 0)
Segment __TEXT: 0x1000 (vmaddr 0x100000000 fileoff 0)
  Section __text: 0x31 (addr 0x100000f50 offset 3920)
  Section __stubs: 0x6 (addr 0x100000f82 offset 3970)
  Section __stub_helper: 0x1a (addr 0x100000f88 offset 3976)
  Section __cstring: 0xe (addr 0x100000fa2 offset 4002)
  Section __unwind_info: 0x48 (addr 0x100000fb0 offset 4016)
  total 0xa7
Segment __DATA_CONST: 0x1000 (vmaddr 0x100001000 fileoff 4096)
  Section __got: 0x8 (addr 0x100001000 offset 4096)
  total 0x8
Segment __DATA: 0x1000 (vmaddr 0x100002000 fileoff 8192)
  Section __la_symbol_ptr: 0x8 (addr 0x100002000 offset 8192)
  Section __data: 0x8 (addr 0x100002008 offset 8200)
  total 0x10
Segment __LINKEDIT: 0x1000 (vmaddr 0x100003000 fileoff 12288)
total 0x100004000

#######
1. __PAGEZERO
  no sections.
2. __TEXT
  has sections:
  __text
  __stubs
  __stub_helper
  __cstring // 0xe == 14 == sizeof("Hello World!\n") - 1
__unwind_info
3. __DATA_CONST
  has sections:
  __got
4. __DATA
  has sections:
  __la_symbol_ptr
  __data
5. __LINKEDIT
  no sections

####### Remarks

0x100000f50 // first instruction
0x100000f50 // address of the __TEXT,__text
// What about below 0x100000f50?
Note 0x1000 = 2^12 = 4KB
0x100000f50
0x100003000
0x100000000 // Size of __PAGEZERO segment = 4GB.

Notice the last occurence of "fileoff" = 12288.
Since a.out is 12556 bytes, the 12288 is clearly an offset into a.out itself.